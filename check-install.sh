#!/bin/bash

# FinanceiroMax - Script de Verifica√ß√£o e Diagn√≥stico
# Vers√£o: 1.0 - Diagn√≥stico completo da instala√ß√£o
# Reposit√≥rio: https://github.com/Joelferreira98/GestorFin

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERRO] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[AVISO] $1${NC}"
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

# Verificar se √© root
if [[ $EUID -ne 0 ]]; then
    error "Este script deve ser executado como root (use sudo)"
    exit 1
fi

APP_DIR="/opt/financeiro"
APP_USER="financeiro"
DB_NAME="financeiro"
DB_USER="financeiro"
APP_PORT=5004

log "=== DIAGN√ìSTICO DA INSTALA√á√ÉO FINANCEIRO MAX ==="

# 1. Verificar estrutura de diret√≥rios
log "1. Verificando estrutura de diret√≥rios..."
if [[ -d "$APP_DIR" ]]; then
    info "‚úì Diret√≥rio da aplica√ß√£o existe: $APP_DIR"
    ls -la "$APP_DIR" | head -10
else
    error "‚úó Diret√≥rio da aplica√ß√£o n√£o existe: $APP_DIR"
fi

if [[ -d "/var/log/financeiro-max" ]]; then
    info "‚úì Diret√≥rio de logs existe"
else
    warn "‚úó Diret√≥rio de logs n√£o existe"
fi

# 2. Verificar usu√°rio do sistema
log "2. Verificando usu√°rio do sistema..."
if id "$APP_USER" &>/dev/null; then
    info "‚úì Usu√°rio $APP_USER existe"
    id "$APP_USER"
else
    error "‚úó Usu√°rio $APP_USER n√£o existe"
fi

# 3. Verificar ambiente Python
log "3. Verificando ambiente Python..."
if [[ -f "$APP_DIR/venv/bin/python" ]]; then
    info "‚úì Ambiente virtual existe"
    sudo -u "$APP_USER" "$APP_DIR/venv/bin/python" --version
else
    error "‚úó Ambiente virtual n√£o existe"
fi

if [[ -f "$APP_DIR/main.py" ]]; then
    info "‚úì Arquivo main.py existe"
else
    error "‚úó Arquivo main.py n√£o encontrado"
fi

if [[ -f "$APP_DIR/.env" ]]; then
    info "‚úì Arquivo .env existe"
    echo "Configura√ß√µes principais:"
    grep -E "^(DATABASE_URL|HOST|PORT)" "$APP_DIR/.env" || true
else
    error "‚úó Arquivo .env n√£o encontrado"
fi

# 4. Verificar banco MySQL
log "4. Verificando banco MySQL..."
if command -v mysql &>/dev/null; then
    info "‚úì MySQL instalado"
    systemctl is-active mysql &>/dev/null && info "‚úì MySQL ativo" || warn "‚úó MySQL inativo"
    
    # Testar conex√£o
    if mysql -u "$DB_USER" -p"FinanceiroMax2025!" -e "USE $DB_NAME; SELECT 1;" &>/dev/null; then
        info "‚úì Conex√£o com banco de dados OK"
    else
        error "‚úó Falha na conex√£o com banco de dados"
    fi
else
    error "‚úó MySQL n√£o instalado"
fi

# 5. Verificar servi√ßo systemd
log "5. Verificando servi√ßo systemd..."
if [[ -f "/etc/systemd/system/financeiro.service" ]]; then
    info "‚úì Arquivo de servi√ßo existe"
    
    systemctl daemon-reload
    
    if systemctl is-enabled financeiro &>/dev/null; then
        info "‚úì Servi√ßo habilitado"
    else
        warn "‚úó Servi√ßo n√£o habilitado"
    fi
    
    if systemctl is-active financeiro &>/dev/null; then
        info "‚úì Servi√ßo ativo"
    else
        error "‚úó Servi√ßo inativo"
        echo "Status do servi√ßo:"
        systemctl status financeiro --no-pager -l || true
        echo
        echo "√öltimos logs:"
        journalctl -u financeiro -n 10 --no-pager || true
    fi
else
    error "‚úó Arquivo de servi√ßo n√£o existe"
fi

# 6. Verificar Nginx
log "6. Verificando Nginx..."
if command -v nginx &>/dev/null; then
    info "‚úì Nginx instalado"
    
    # Testar configura√ß√£o
    if nginx -t &>/dev/null; then
        info "‚úì Configura√ß√£o Nginx OK"
    else
        error "‚úó Erro na configura√ß√£o Nginx"
        nginx -t 2>&1 || true
    fi
    
    if systemctl is-active nginx &>/dev/null; then
        info "‚úì Nginx ativo"
    else
        error "‚úó Nginx inativo"
        systemctl status nginx --no-pager || true
    fi
    
    # Verificar configura√ß√£o do site
    if [[ -f "/etc/nginx/sites-available/financeiro" ]]; then
        info "‚úì Configura√ß√£o do site existe"
    else
        error "‚úó Configura√ß√£o do site n√£o existe"
    fi
    
    if [[ -L "/etc/nginx/sites-enabled/financeiro" ]]; then
        info "‚úì Site habilitado"
    else
        error "‚úó Site n√£o habilitado"
    fi
else
    error "‚úó Nginx n√£o instalado"
fi

# 7. Testar conectividade
log "7. Testando conectividade..."

# Testar se a aplica√ß√£o responde na porta
if curl -s http://localhost:$APP_PORT >/dev/null 2>&1; then
    info "‚úì Aplica√ß√£o respondendo na porta $APP_PORT"
else
    warn "‚úó Aplica√ß√£o n√£o responde na porta $APP_PORT"
fi

# Testar via Nginx
if curl -s http://localhost:80 >/dev/null 2>&1; then
    info "‚úì Nginx respondendo na porta 80"
else
    warn "‚úó Nginx n√£o responde na porta 80"
fi

# 8. Verificar depend√™ncias Python
log "8. Verificando depend√™ncias Python..."
if [[ -f "$APP_DIR/venv/bin/pip" ]]; then
    echo "Principais depend√™ncias instaladas:"
    sudo -u "$APP_USER" "$APP_DIR/venv/bin/pip" list | grep -E "(Flask|SQLAlchemy|gunicorn)" || true
else
    error "‚úó pip n√£o encontrado no ambiente virtual"
fi

# 9. Verificar logs
log "9. Verificando logs recentes..."
if [[ -f "/var/log/financeiro-max/app.log" ]]; then
    info "√öltimas 5 linhas do log da aplica√ß√£o:"
    tail -5 "/var/log/financeiro-max/app.log" 2>/dev/null || true
else
    warn "Log da aplica√ß√£o n√£o encontrado"
fi

# 10. Resumo e sugest√µes
log "10. Resumo e Sugest√µes de Corre√ß√£o..."
echo
echo "=== SUGEST√ïES DE CORRE√á√ÉO ==="

# Verificar problemas comuns
PROBLEMS_FOUND=0

if ! systemctl is-active financeiro &>/dev/null; then
    echo "üîß Para corrigir servi√ßo inativo:"
    echo "   sudo systemctl start financeiro"
    echo "   sudo journalctl -u financeiro -f"
    PROBLEMS_FOUND=1
fi

if ! systemctl is-active nginx &>/dev/null; then
    echo "üîß Para corrigir Nginx inativo:"
    echo "   sudo systemctl start nginx"
    echo "   sudo nginx -t"
    PROBLEMS_FOUND=1
fi

if ! curl -s http://localhost:$APP_PORT >/dev/null 2>&1; then
    echo "üîß Para corrigir aplica√ß√£o n√£o respondendo:"
    echo "   cd $APP_DIR"
    echo "   sudo -u $APP_USER ./venv/bin/python main.py"
    PROBLEMS_FOUND=1
fi

if [[ $PROBLEMS_FOUND -eq 0 ]]; then
    log "‚úÖ Nenhum problema cr√≠tico encontrado!"
    echo
    echo "üåê Acesso ao sistema:"
    echo "‚Ä¢ URL: http://$(curl -s ipinfo.io/ip 2>/dev/null || echo 'SEU-IP'):80"
    echo "‚Ä¢ Usu√°rio: joel" 
    echo "‚Ä¢ Senha: Admin@2025!"
else
    warn "‚ùå Problemas encontrados. Execute as corre√ß√µes sugeridas acima."
fi

echo
echo "üìù Para monitoramento cont√≠nuo:"
echo "‚Ä¢ sudo journalctl -u financeiro -f"
echo "‚Ä¢ sudo tail -f /var/log/financeiro-max/app.log"
echo "‚Ä¢ sudo systemctl status financeiro nginx"
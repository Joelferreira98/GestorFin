#!/usr/bin/env python3
"""
Teste completo do sistema para VPS
"""
from app import app, db
from models import User
import logging

logging.basicConfig(level=logging.INFO)

def test_complete_system():
    """Teste completo do sistema"""
    
    print("=== TESTE COMPLETO DO SISTEMA ===")
    
    with app.app_context():
        try:
            # 1. Teste de conex√£o com banco
            print("1. Testando conex√£o com banco...")
            user_count = User.query.count()
            print(f"‚úÖ Banco conectado - {user_count} usu√°rios encontrados")
            
            # 2. Teste do usu√°rio admin
            print("2. Testando usu√°rio admin...")
            admin_user = User.query.filter_by(username='joel').first()
            
            if admin_user:
                print(f"‚úÖ Admin encontrado: {admin_user.username}")
                print(f"‚úÖ Email: {admin_user.email}")
                print(f"‚úÖ Is Admin: {admin_user.is_admin}")
                
                # 3. Teste de senha
                print("3. Testando senhas...")
                old_password_ok = admin_user.check_password('123456')
                new_password_ok = admin_user.check_password('Admin@2025!')
                
                print(f"‚úÖ Senha antiga (123456): {old_password_ok}")
                print(f"‚úÖ Senha nova (Admin@2025!): {new_password_ok}")
                
                if new_password_ok:
                    print("‚úÖ SENHA NOVA EST√Å FUNCIONANDO!")
                else:
                    print("‚ùå Problema com senha nova")
                    
            else:
                print("‚ùå Usu√°rio admin n√£o encontrado")
                return False
            
            # 4. Teste das rotas
            print("4. Testando rotas registradas...")
            routes = []
            for rule in app.url_map.iter_rules():
                if 'login' in rule.rule or 'dashboard' in rule.rule:
                    routes.append(f"{rule.rule} -> {rule.endpoint} ({rule.methods})")
            
            for route in routes:
                print(f"‚úÖ {route}")
            
            # 5. Teste de configura√ß√£o
            print("5. Testando configura√ß√µes...")
            print(f"‚úÖ SECRET_KEY: {'OK' if app.config.get('SECRET_KEY') else 'FALTANDO'}")
            print(f"‚úÖ DATABASE_URL: {'OK' if app.config.get('SQLALCHEMY_DATABASE_URI') else 'FALTANDO'}")
            print(f"‚úÖ SESSION_COOKIE_SECURE: {app.config.get('SESSION_COOKIE_SECURE')}")
            
            print("\n=== RESUMO ===")
            print("‚úÖ Sistema configurado corretamente")
            print("‚úÖ Banco de dados conectado")  
            print("‚úÖ Usu√°rio admin existe")
            print("‚úÖ Senha nova funciona")
            print("‚úÖ Rotas registradas")
            
            return True
            
        except Exception as e:
            print(f"‚ùå Erro no teste: {str(e)}")
            import traceback
            traceback.print_exc()
            return False

if __name__ == "__main__":
    success = test_complete_system()
    if success:
        print("\nüéâ SISTEMA PRONTO PARA PRODU√á√ÉO!")
        print("üìã Pr√≥ximos passos:")
        print("   1. Fazer deploy das mudan√ßas na VPS")
        print("   2. Testar login no navegador")
        print("   3. Verificar se todas as funcionalidades est√£o OK")
    else:
        print("\n‚ùå Sistema tem problemas - verificar logs acima")